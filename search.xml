<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【Medium】People, Products, and Epiphanies]]></title>
    <url>%2F2019%2F04%2F16%2F%E3%80%90Medium%E3%80%91People%2C%20Products%2C%20and%20Epiphanies%2F</url>
    <content type="text"><![CDATA[How a user-first culture led to a decade of eureka moments at Google UX 用户至上的文化如何在 Google UX上带来十年的 eureka 时刻。 I joined Google’s User Experience team over a decade ago. Since then, much has changed — technology, how we use it, and Google itself. Now, as a UX Director, I find myself asking, what are the constants in my profession? With so much in flux, what, truly, is my job? 十多年前，我加入了 Google 的用户体验团队。从那时起，发生了很多技术上的变化，我们如何使用它，以及谷歌自己如何使用它。 现在，作为一名 UX 总监，我询问我自己，我职业中的不变的那一部分是什么？ 经历了这么多，我真正的工作是什么？ Increasingly, I believe it’s enabling collaborating teams to have their eureka moments — the sudden insights, or sparks of energy, that are ultimately the source of creativity and true innovation. This belief might sound counterintuitive. Isn’t the director meant to be the source of a singular vision and then have the team execute on it? Not in my experience at Google. 逐渐的，我相信这可以使合作团队拥有他们自己的 eureka 时刻——突然出现的洞察，或者动力的火花，最终这些才是创造力和真实创新的源泉。这种看法可能听起来有悖常理，UX 总监是不是成为非凡视角的源泉，然后让团队去执行它？这不是我在 Google 体验到的事。 Google: The early days Google：早些时候You’re probably familiar with the lore: founded in 1998 by two Stanford PhD students, incorporated in a Palo Alto garage, with server racks built from Lego blocks. What’s less well-known is that several members of the early team, including co-founder Larry Page, had studied in Terri Winograd’s Human Computer Interaction (HCI) group at Stanford. 你可能对这件事情很熟悉：1998年，由两位斯坦福大学博士生，和在帕洛阿尔托车库里的一个由乐高积木建造的服务器机架一起成立的公司。 不太知名的是早期团队的几位成员，包括联合创始人拉里.佩奇，他曾在斯坦福的 Terri Winograd 的人机交互（HCI）小组学习。 This early interest in the human side of technology became central to the company’s culture: “Focus on the user and all else will follow” is the first entry in our founding philosophy. It also set the precedent for Google’s very first user tests in those startup days, which consisted of engineers showing prototypes to students on Stanford’s campus, and gathering feedback. But as Google and its products expanded over the years, this direct and immediate contact with users became harder and harder to maintain. 这种早期对人类技术的兴趣成为公司文化的核心：“关注用户，然后其他的所有都将会跟随” 是我们创始理念的第一个条目。 它还为 Google 在那些创业时期进行的首批用户测试开创了先例，其中包括工程师向斯坦福校园里的学生展示原型，并收集反馈。 但随着 Google 以及其产品多年来的拓展，与用户的这种即时直接的联系变得越来越难以维护。 Google’s response was to hire experts, like myself in 2006, to make our products simple, easy, and joyful to use. In those days we also built usability labs — simulated office environments with desktop computers — to test products for ease of use and simplicity. 在2006年，Google 的回应是聘请像我一样的专家，让我们的产品简单，轻松，并让人在使用中感受到乐趣。 在那些日子里，我们还建立了可用性实验室 - 使用台式计算机模拟办公环境 - 用来测试产品的易用性和简单性。 I spent most of my first years at Google in these labs. We’d run our usability tests, and afterward, I would often send annotated prototypes back to designers and engineers, with suggestions for improvements. This process was used to polish many of our products, and it helped Google become known for the simplicity of its designs. Remember, the all-white homepage with a single search box was actually quite radical at a time when most websites were using every single pixel of their pages for content. 我在这些实验室中度过了第一年的大部分时间。 我们进行可用性测试，并且在那之后我会经常将带注释的原型发送给设计师和工程师，并提出改进建议。 这个过程用于打磨优化我们的许多产品，帮助 Google 以其设计的简单性而闻名。请记住，当大多数网站使用其网页的每个像素作为内容时，带有单个搜索框的全白主页实际上相当激进。 Though we were becoming very efficient at testing and improving products, there was also a feeling that we had lost some of the spirit of the early startup days, when everyone on the team, not just specialists, had direct contact with the people we built for. What’s more, the labs were located in our own offices, which meant we were in touch with a limited population of people who could easily visit us. 虽然我们的工作在测试和改进产品方面变得非常有效，但当团队中的每个人，不仅仅是专家，都会与我们为之建立的人员直接接触的时候，有一种感觉像是我们失去了创业初期的一些精神。 更重要的是，实验室位于我们自己的办公室，这意味着我们与可以轻松访问我们的有限人群保持联系。 Finding inspiration outside the office 在办公室外寻找灵感When I took over the UX Research team for Google Maps in 2009, an opportunity arose to improve the directions feature. It just seemed wrong to study wayfinding while seated at a desk in a lab, so we took to the streets to observe and talk to people in different environments: mega-cities, rural villages — and everything in-between — in the Americas, Europe, and Asia. 当我在 2009 年接管了谷歌地图的 UX 研究团队时，有了一个机会去改进其中的路线功能。 我们发现在实验室的桌子旁边研究 “寻路” 时似乎是错误的，所以我们走上街头观察并与不同环境中的人们交谈：在美洲，欧洲 和亚洲的大城市，乡村 - 以及介于两者之间的所有人。 We sent the entire team — not just researchers but engineers, product managers, and designers, too — out to investigate. Placed in the field, they got to interview people, note observations, and try navigating by themselves in unfamiliar environments. 我们派遣了整个团队外出调查 - 不仅仅是研究人员，还有工程师，产品经理和设计师。在现场，他们采访了人们，记录观察，并尝试在不熟悉的环境中自行导航。 These trips resulted in usability fixes, but more importantly, they were often the seeds for new ideas, new features, or improved functionality that would be taken forward by the engineers and designers who participated in the research and thus felt inspired. 这些用户旅程为我们带来了可用性修复，但更重要的是，它们通常是新想法，新功能或者将由参与研究的工程师和设计师推进并因此受到启发来改进功能的种子。 One example is with landmarks. While traveling in India, the team noticed most people prefer to use landmarks over road names when giving directions. Even with clearly marked signage, people might say: “Turn right after the petrol station.” This crucial insight, experienced by the team firsthand, allowed us to add landmarks to driving directions in Google Maps. 有一个例子是地标。 当在印度旅行时，团队注意到大多数人在给出路线时更喜欢使用路标上的地标。 即使有明显标记的标牌，人们也可能会说：“在加油站后右转。” 团队亲身体验的这一重要的见解使我们能够在 Google 地图中为行车路线添加地标。 The early trips in 2009 helped improve our product, but they also laid the foundation for a way of working that would take us on many more journeys. What started as a single undertaking became a pattern of team immersion trips, and we’ve since built many products and features in this way. Two-wheeler navigation, a new search experience in Google Go, and Google Maps commuter features are just a few recent examples. 2009 年的早期旅行有助于改进我们的产品，但它们也奠定了工作方式的基础，这将带领我们进行更多的旅程。 从单一事业开始，成为团队沉浸式旅行的模式，我们已经以这种方式构建了许多产品和功能。 两轮车导航，Google Go 中的全新搜索体验以及 Google Maps 通勤功能，这些仅仅是最近的一些示例。 The sparks of innovation 创新的火花Why do we place so much emphasis on field trips, team immersion, and direct contact with our users? After all, we already know a lot through metrics and market reports. 为什么我们如此重视实地考察，团队沉浸式研究以及与我们用户的直接联系？ 毕竟，我们已经通过指标和市场报告了解了很多。 It has a lot to do with our culture. We sometimes, and only half-jokingly, refer to Google as having a “Montessori culture.” 这与我们的文化有很大关系。 我们有时只是半开玩笑地称谷歌拥有“蒙台梭利文化”。 Maria Montessori revolutionized education over a century ago. She had discovered that students learn better from each other through experimentation, often outside the classroom, and — most importantly — when they are allowed to make mistakes, have their own epiphanies and eureka moments. These moments, when everything suddenly falls into place, provide the enthusiasm and motivation for learning. This isn’t just true for students; sparks of insights are just as essential for anyone working towards innovation. I’ll explain why. 一个世纪以前，玛丽亚蒙特梭利彻底改变了教育。 她发现通过实验相互学习的学生，通常在课堂外学习更好，而且最重要的是，当他们被允许犯错误时，他们会有自己的感悟和 eureka 时刻。 当一切突然出现时，这些时刻为他们提供了学习的热情和动力。这不仅适用于学生，对于致力于创新的人来说，洞察力的火花同样重要。下面我会解释原因。 Creative jobs are sometimes portrayed as fairy-tale professions where everyone sits in architecturally stunning offices, walls covered in colorful post-its, having one great idea after the other. The hard truth is that the road to innovation winds past many failed attempts, goes through valleys of doubt and uncertainty, and has many forks with no signposts. Without the energy released by eureka moments, it’s hard to sustain the momentum required to “stay the course” and achieve true innovation. 在每个人都坐在拥有令人惊叹的办公室，墙壁上覆盖着色彩缤纷的海报，诞生一个又一个的好主意的地方，创造性的工作有时被描绘成童话般的职业。事实上，通向创新的道路上会经历许多失败的尝试，穿过充满怀疑和不确定性的山谷，并且有许多没有路标的岔路。 如果没有 eureka 时刻释放的能量，就很难保持 “坚持到底” 并拥有真正创新所需的动力。 What creates the most energy and momentum in a team is a sense that they’ve had a meaningful breakthrough, often after a frustrating period of failing to see the forest for the trees. 能够在团队中创造最大能量和动力的感觉像是，通常是在经历了一片令人沮丧的未能看到森林树木的时期之后，他们有了一次有意义的突破。 What leads to eureka moments? In my experience it comes back to three things: first, participation — being part of the insights gathering and sense-making; second, empathy — establishing a human connection with the people we’re designing for; and finally, intuition — the ability to detect patterns and form insights, often honed through years of experience. 什么会把我们引导至 eureka 时刻？ 根据我的经验，它回归到三件事： 参与 - 成为洞察力收集和感知的一部分; 同理心 - 与我们正在为其设计的人建立情感连接; 直觉 - 通常通过多年的经验磨练，然后能够检测模式并形成见解。 We can go through hundreds of pages of slide decks with market insights and trend projections, and watch hours worth of video footage. But in the end, what creates the most energy and momentum in a team is a sense that they’ve had a meaningful breakthrough, often after a frustrating period of failing to see the forest for the trees. This active form of insight gathering is much more powerful than absorbing someone else’s report. 我们可以通过浏览关于市场洞察和趋势预测的数百页的幻灯片，并观看数小时的视频片段。但最终，在团队中创造最大能量和动力的感觉是他们已经有了一个有意义的突破，通常是在一个令人沮丧的未能看到森林中的树木的时期之后。这种积极的洞察力收集形式比吸收别人的报告内容要强大得多。 The second trigger for eureka moments is having direct, first-hand encounters with people from outside your own social circles. People with different backgrounds and interests, who live differently, and have unique needs and perspectives. Establishing a human connection with others widens our frame of reference, and gives us a level of empathy and understanding that is otherwise difficult to gain. Most critically, it also provides energy and a sense of purpose for the hard work and struggles that eventually lead to creative solutions. eureka 时刻的第二个触发点是与来自您自己社交圈外的人进行直接的第一手接触。 生活方式不同，具有独特需求和观点的人具有不同的背景和兴趣爱好。与他人建立情感连接可以拓宽我们的参考框架，并为我们提供了一种除此之外难以获得的同情和理解。最关键的是，它还为努力工作和最终导致创造性解决方案被提出的争吵提供了能量和一种目标感。 Of course, we do all the other things as well: we synthesize data and do large-scale surveys. Without grounding in metrics, quant data, and careful context setting, there is a risk that the eureka moments we create are just a firework of energy — bright, dazzling, and good entertainment, but without lasting, meaningful effect. 当然，我们也会很好地去做所有其他事情：我们综合数据并进行大规模调查。 如果没有基础指标，量化数据和仔细的背景设置，那么我们创造的 eureka 时刻就有仅仅成为能量的烟花 - 明亮，耀眼，娱乐性好，但却没有持久，有意义的效果的风险。 Metrics are vital because they allow us to test ideas formed from direct observation, and they also help us decide where to look. But there’s also a risk of over-relying on them. With readily available quantified data, we may optimize for what is easy to count vs. what truly counts — for what’s measurable vs. what matters. From my experience over the years, I believe identifying and defining what matters also requires our human powers of intuition; and intuition is built from years of varied experiences and learning — and often gets triggered through direct participation and exploration. 度量标准至关重要，因为它们允许我们测试通过直接观察而形成的想法，它们也帮助我们决定在哪里寻找。 但也存在过度依赖它们的风险。 通过随时可用的量化数据，我们可以针对易于计算的内容和真正重要的数据进行优化 - 针对什么是可衡量的和重要的。 根据我多年来的经验，我认为识别和定义重要的东西也需要我们的人类直觉的力量; 直觉是建立在多年的各种经验和学习之上的 - 并且经常通过直接参与和探索来触发。 Day-to-day eureka moments 日常的 eureka 时刻In the early days, Google engineers got feedback on their prototypes in direct conversations with people at Stanford. We recently wondered: how do we bring back what the 20 person Google did, when we currently have nearly 100,000 employees? This is how Meet the User was born. 在早期，Google 工程师通过与斯坦福大学的人们的直接对话获得了他们关于原型的反馈。 我们最近想知道：目前当我们拥有近10万名员工时，我们该如何收回 Google 所做的20人？ 这就是Meet the User 诞生的方式。 We now regularly invite users of our products to come and meet the engineers who build them. For one afternoon, our guests explain to our engineers how they actually use the products, how they fit into their lives, and what they think could be better. 我们现在定期邀请使用我们产品的用户来与构建它们的工程师会面。 一天下午，我们的客人向我们的工程师解释他们实际使用产品的方式，这些产品如何适应他们的生活，以及他们认为可能使产品更好的一些想法。 Googlers typically start off feeling somewhat skeptical: “What is this visitor going to teach me about my product?” Then the conversations happen, and the energy in the room is transformed — pre-conceptions are shattered, world views changed, and afterward everyone is keen to share unique insights from their one-on-ones. I’ve run some of these sessions myself, and they’ve been among the most satisfying moments of my career. Google 员工在一开始通常会感到有点怀疑：“关于我的产品，这位访客会告诉我些什么？” 然后谈话发生了，房间里的能量发生了变化 - 之前的概念被打破，世界观变了，之后每个人都会热衷于分享他们在一对一谈话中的独特见解。 我自己也参加了一些这样的会议，他们一直是我职业生涯中最令人满意的时刻之一。 The world — and technology — will continue to change. Our profession will go on reinventing itself. After moving from the web to mobile and now to AI, it might be hard to see what the stable foundations will be, what the essence of our profession really is. I believe creativity that’s inspired by empathy and supported by data and intuition will be one of those stable pillars that remain intact throughout these changes — and not just for product design and research, but business more broadly. 这个世界，以及技术将继续发生变化。我们的专业将继续重塑我们自己。从网站到移动端，在到现在的 AI，可能很难看出未来稳定的基础将会是什么，我们职业的本质是什么。 我相信受到同理心、数据和直觉支持的创造力将成为这些变化中保持完整的稳定支柱之一，不仅仅是产品设计和研究，还有更广泛的业务。 From a more personal standpoint, the last decade working in and growing Google’s UX team has taught me a lot about how to create an environment that’s fertile to creativity and innovation within a culture that prizes engineering excellence. Interestingly, this has often meant leaving my own “expert” status at the door and instead enabling my team members and product team partners to have their own epiphanies. That is, to create situations that let them gain new and memorable insights, to experience the dopamine release that comes from making their own discovery, which then provides the energy to see an idea through to implementation. 从更多的个人的角度来看，过去十年在 Google 用户体验团队工作和发展的过程中，已经教会了我很多关于如何在一种奖励工程卓越的文化中去创造一种富有创造力和创新能力的环境。有趣的是，这通常意味着将自己的 “专家” 状态舍弃，让我的团队成员和产品团队合作伙伴可以拥有他们自己的见解和领悟。 也就是说，创造让他们获得新的和令人难忘的洞察的情境，体验自己发现的多巴胺释放，然后提供能量来看到想法的实现。 I believe what has worked well here at Google is likely to work in other organizations because it speaks to a fundamentally human joy we experience when we reach a new level of understanding — from our own observations, and yes, our own struggles and epiphanies. 我相信在 Google 这里运作良好的东西同样可能会在其他组织中发挥作用，因为它说明了当我们达到一个新的理解水平时我们所经历的人类基本的快乐 - 从我们自己的观察中产生，并且是的，是我们自己的斗争和领悟。 This post is an extension of some thoughts I’ve been exploring at the 2018 Web Summit in Lisbon and 4YFN/MWC in Barcelona. In my day job, I’m leading UX strategy &amp; operations teams for sumUX (Search, Assistant, and News), as well as UX infrastructure across Google. I have a passion for art and science, as well as stats and empathy, and have found Google a great place to bring these together. Follow me on Twitter &amp; LinkedIn. 这篇文章是我在 2018 年里斯本网络峰会和巴塞罗那 4YFN / MWC 一直在探索的一些想法的延伸。 在我的日常工作中，我领导着针对 sumUX（搜索，助理和新闻）的 UX 战略和运营团队，以及整个 Google UX 的基础架构。 我对艺术和科学，以及统计和同理心都充满热情，并且发现 Google 是将这些融合在一起的好地方。 你可以在 Twitter 和 LinkedIn 上关注我。 原文地址：https://medium.com/google-design/people-products-and-epiphanies-bfed0f3fbb2d]]></content>
      <categories>
        <category>Reading</category>
        <category>Medium</category>
      </categories>
      <tags>
        <tag>Google; UX</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【Medium】UI2CODE 简介-自动 Fluer UI 代码生成器]]></title>
    <url>%2F2019%2F04%2F15%2F%E3%80%90Medium%E3%80%91UI2CODE%20%E7%AE%80%E4%BB%8B-%E8%87%AA%E5%8A%A8%20Fluer%20UI%20%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%2F</url>
    <content type="text"><![CDATA[With the help of AI, Alibaba’s Xianyu tech team is advancing an intelligent tool that renders visual UI design as Flutter code with 100 percent accuracy. 在 AI 的帮助下，阿里巴巴闲鱼技术团队正在推进一种智能工具，这种工具可以将视觉 UI 设计转换为具有 100% 准确性的 Flutter 代码。 As we explored in our recent article on AI-based algorithm development, automation is quickly changing from something to that developers can work on into something that can do developers’ work. While the extent of this shift remains to be seen in the years to come, one major focus today is how AI can tackle the repetitive and tedious aspects of application development so human developers can focus their efforts elsewhere. 正如我们在最近关于基于 AI 的算法开发的文章中所探讨的那样，自动化技术正在迅速地从需要开发者来进行工作的东西转变为不需要开发者就可以工作的东西。 虽然这种转变的程度在未来几年仍有待观察，但今天的一个主要焦点是 AI 如何解决应用程序开发中的重复和乏味，以便人类开发者可以将他们的工作重点放在其他地方。 Now, developers at Alibaba’s Xianyu(闲鱼) second-hand trading platform have launched the UI2CODE project to apply deep learning technology in converting visual user interface images to client-side code. With clear component, position, and layout features that suit the scope of machine learning, UI vision research presents an especially promising area for exploring these technologies’ uses in automatic code generation. 现在，阿里巴巴闲鱼二手交易平台的开发者推出了 UI2CODE 项目，将深度学习技术应用于将可视化用户界面图像转换为客户端代码。 凭借清晰的组件，位置和适合机器学习的布局特征，UI 视觉研究为探索这些技术在自动代码生成中的应用提供了一个特别有前景的领域。 In this introduction to Xianyu’s ongoing efforts, we explore how UI2CODE analyzes GUI elements and UI layout structures to generate Flutter code for applications’ overall design. 在介绍闲鱼正在进行的工作中，我们将探讨 UI2CODE 如何分析 GUI 元素和 UI 布局结构，以便为应用程序的整体设计生成 Flutter 代码。 Fundamentals of the Project 项目基础Early work on the UI2CODE started in March 2018, when the Xianyu Technical Team undertook initial research on its technical feasibility. Since then the project has undergone three rounds of refactoring, progressing through various machine learning code generation programs to meet the criteria of commercial settings. UI2CODE 的早期工作始于 2018 年 3 月，当时闲鱼技术团队对其技术可行性进行了初步研究。 从那时起，该项目经历了三轮重构，通过各种机器学习代码生成的程序来进行，以满足商业环境的标准。 UI2CODE’s central principle is to divide and control UI development features so as to avoid a too-many-eggs-in-one-basket scenario. To this end, the solutions it incorporates have been evaluated based on three core demands. First, for the precision of visual restorations, their outputs cannot deviate by even a single pixel. Second, though machine learning is subject to probability, their results must meet 100 percent accuracy standards. Lastly, the solutions must be easy to maintain; being understandable and modifiable for engineers is only a starting point, and a well-reasoned layout structure is essential to ensuring smooth interface operation. UI2CODE 的核心原则是划分和控制 UI 开发功能，以避免太多鸡蛋在一篮子的情况。 为此，它所包含的解决方案已根据三个核心需求进行了评估。 首先，对于视觉修复的精确度，它们的输出不会偏离甚至单个像素。 其次，虽然机器学习受概率影响，但其结果一定可以达到 100％ 的准确度标准。 最后，解决方案必须易于维护; 对于工程师来说，可理解和可修改只是一个起点，而且合理的布局结构对于确保平滑的界面操作来说至关重要。 Running Results 运行结果Following several rounds of refactoring, the Xianyu team determined that UI2CODE’s key functionality is to solve automatic generation of the feed stream card, which can also be automatically generated at the page level. The following video shows the running results of the UI2CODE plug-in: 经过几轮重构，闲鱼团队确定 UI2CODE 的关键功能是解决源流卡的自动生成，这个功能也可以在页面级被自动生成。 以下视频显示了UI2CODE插件的运行结果： https://youtu.be/4r14enX-uhU The following sections explore the design and process principles which enable UI2CODE to generate these results. 以下部分我们将探讨使 UI2CODE 能够生成这些结果的设计和过程的原则。 Architectural Design and Process Breakdown 架构设计和流程细分The following diagram offers an overview of UI2CODE’s architectural design. 下图展示了 UI2CODE 架构设计的概述。 With it, the system’s process can be briefly summarized in the steps shown below: 有了它，系统的过程就可以通过以下步骤简要总结： This process roughly corresponds to four steps. First, GUI elements are extracted from visual drafts using deep learning technology. Next, deep learning techniques are used to identify the types of GUI elements present. Third, DSL is generated using recursive neural network technology. Finally, the corresponding Flutter code is generated using syntax-tree template matching. The following sections discuss key steps in the UI2CODE system in detail. 该过程大致对应于四个步骤。 使用深度学习技术从视觉草图中提取 GUI 元素。 使用深度学习技术来识别存在的 GUI 元素的类型。 使用递归神经网络技术生成 DSL。 使用语法树模板匹配生成相应的 Flutter 代码。 以下部分详细讨论了UI2CODE系统中的关键步骤。 Background / Foreground Analysis | 背景 / 前景分析The singular purpose of background/foreground analysis in UI2CODE is slicing, which enables a direct determination of the UI2CODE output’s accuracy. The following white-background UI offers a straightforward example: UI2CODE 中背景 / 前景分析的唯一目的是切片，这能够直接确定 UI2CODE 输出的准确性。 以下白背景 UI 提供了一个简单的示例： After reading this UI into memory, binarization is performed on it as follows: 将此 UI 读入内存后，将对其执行二值化，代码如下所示： def image_to_matrix(filename): im = Image.open(filename) width, height = im.size im = im.convert(&quot;L&quot;) matrix = np.asarray(im) return matrix, width, height The result is a two-dimensional matrix, which converts the value of the white background in this UI to zero: 结果是一个二维矩阵，它将此 UI 中白色背景的值转换为零： Only five cuts are needed to separate all of the GUI elements. There are various ways of cutting these apart; the following shows a cross-cut code snippet and is slightly less complicated than the actual cutting logic, which is essentially a recursive process: 分离所有 GUI 元素只需要五次切割。 有各种方法可以将它们分开; 下面显示了一个横切的代码片段，并且比实际的切割逻辑稍微复杂一点，这实际上是一个递归过程： def cut_by_col(cut_num, _im_mask): zero_start = None zero_end = None end_range = len(_im_mask) for x in range(0, end_range): im = _im_mask[x] if len(np.where(im==0)[0]) == len(im): if zero_start == None: zero_start = x elif zero_start != None and zero_end == None: zero_end = x if zero_start != None and zero_end != None: start = zero_start if start &gt; 0: cut_num.append(start) zero_start = None zero_end = None if x == end_range-1 and zero_start != None and zero_end == None and zero_start &gt; 0: zero_end = x start = zero_start if start &gt; 0: cut_num.append(start) zero_start = None zero_end = None The client UI is basically a vertical flow layout, for which a cross cut followed by a vertical cut can be made: 客户端 UI 基本上是垂直流布局，可以对其进行横切，然后进行垂直切割： At this point, the X and Y coordinates of the cut point are recorded, and will form the core of the component’s positional relationship. After slicing, this yields two sets of data: six GUI element pictures and their corresponding coordinate system records. In subsequent steps, component identification is performed using a classification neural network. 此时，记录切割点的 X 和 Y 坐标，并形成组件位置关系的核心。 在切片之后，这会产生两组数据：六个GUI元素图片及其对应的坐标系记录。 在随后的步骤中，使用分类神经网络执行组件识别。 In actual production processes, background/foreground analysis becomes more complicated, mainly in terms of dealing with complex backgrounds. 在实际生产过程中，背景/前景分析变得更加复杂——主要是在处理复杂背景方面。 Component Identification 组件识别Prior to component identification, sample components must be collected for training. Further, the CNN model and SSD model provided in TensorFlow are used for incremental training at this stage. 在识别组件之前，必须收集样品组件进行培训。 此外，TensorFlow 中提供的 CNN 模型和 SSD 模型在此阶段也用于增量训练。 UI2CODE classifies GUI elements according to a wide variety of types, including Image, Text, Shape / Button, Icon, Price, and others which are then categorized as UI components, CI components, and BI components. UI components are mainly for classification of Flutter-native components; CI components are mainly for classification of Xianyu’s custom UIKIT; and BI components are mainly for classification of feed stream cards with specific business relevance. UI2CODE 根据各种类型对 GUI 元素进行分类，包括图像，文本，形状/按钮，图标，价格等，然后将其分类为 UI 组件，CI 组件和 BI 组件。 UI 组件主要用于 Flutter 本机组件的分类; CI 组件主要用于闲鱼的定制 UIkits 的分类; BI 组件主要用于对具有特定业务相关性的源流卡进行分类。 Global feature feedback is needed for repeated correction of component identification, usually adopting a convolutional neural network. Taking the following screenshot as an example, the two characters of text in crimson red (translating to “Brand new”) comprise the richtext portion of the image. Meanwhile, the same shape style may be present in buttons or icons. 通常采用卷积神经网络来重复校正组件识别需要全局特征反馈。 以下面的屏幕截图为例，深红色文本的两个字符（翻译为“全新”）包含图像的 richtext 部分。 同时，相同的形状样式也可以存在于按钮或图标中。 Attribute Extraction 特征提取Amid a diverse array of technical points, UI2CODE’s attribute extraction step can be summarized as addressing three aspects of components: shape and contour, font attributes, and dimensions. 在各种各样的技术要点中，UI2CODE 的属性提取步骤可以概括为解决组件的三个方面：形状和轮廓，字体属性和尺寸。 Following attribute extraction, extraction of all GUI information is effectively complete. The GUI DSL is generated as follows: 在属性提取之后，有效地完成了对所有GUI信息的提取。 GUI DSL生成如下： This data enables layout analysis to be performed. Here, extraction of text attributes is the most complicated factor. 该数据使得能够执行布局分析。 在这里，提取文本属性是最复杂的因素。 Layout Analysis | 布局分析In early stages of UI2CODE, the Xianyu team used a four-layer LSTM network for training and learning before shifting to rule implementation due to the small sample size. Rule implementation also has the advantage of being relatively simple; the order of the five cuts inn the first step of slicing is row and col. The disadvantage of rule implementation is that the layout is relatively rigid and needs to be combined with RNN for advance feedback. 在 UI2CODE 的早期阶段，闲鱼团队使用四层 LSTM 网络进行培训和学习，然后由于样本量较小而转向规则实施。 规则实施还具有相对简单的优点; 切片第一步的五个切口的顺序是 row 和 col。 规则实施的缺点是布局相对严格，需要与 RNN 结合以提前反馈。 The following video shows the results of predicting layout structure through the four-layer LSTM mechanism; here, the UI layout structure is akin to the framework of a building, while the UI layer code restoration is akin to interior design using GUI attributes. 以下视频显示了通过四层 LSTM 机制预测布局结构的结果; 在这里，UI 布局结构类似于建筑物的框架，而 UI 层代码则恢复于类似使用 GUI 属性的室内设计。 https://youtu.be/3c62yaTZU1I Code Generation and Plug-in 代码和生成插件AI is essentially a matter of probability, while automatically generated code demands a very high degree of restoration and 100 percent accuracy. As probability dynamics make it difficult to achieve this level of accuracy, an editable tool is needed to enable developers to quickly understand and modify UI layout structures. AI 基本上是概率问题，而自动生成的代码需要非常高的可恢复性和 100％ 的准确性。并且由于概率的浮动使得 AI 难以达到这种精确度，因此需要一个可编辑的工具来使开发人员能够快速理解和修改 UI 布局结构。 To this end, the Xianyu team implemented a template-based matching approach for the DSL TREE generated by UI2CODE, in which the code template’s content is defined by experienced Flutter technologists. This has so far proved to be the optimal approach to code implementation. 为此，闲鱼团队为 UI2CODE 生成的 DSL TREE 实现了基于模板的匹配方法，其中代码模板的内容由经验丰富的 Flutter 技术人员定义。 到目前为止，这已被证明是代码实现的最佳方法。 Some tags are introduced in the code template, and the Intellij plug-in is used to retrieve and replace the corresponding UIKIT in the Flutter project so as to improve code reuse. 代码模板中被引入了一些标记，Intellij 插件用于检索和替换 Flutter 项目中的相应 UIkit，以便提高代码重用率。 The entire plug-in project requires provision of custom UIKIT functionality, which includes retrieval, replacement, verification, creation, modification, and graphic identification for the DSL Tree. In all, this is similar to the ERP system, which takes time for improvement. 整个插件项目需要提供自定义 UIkit 功能，包括 DSL 树的检索，替换，验证，创建，修改和图形识别。 总之，这与 ERP 系统类似，后者则需要时间进行改进。 Key Takeaways 关键要点Of the five key components introduced in this article, four relate to machine vision problems and are linked together through AI. Releasing code into an online environment presents extremely strict requirements, and AI’s probabilistic nature presents a major challenge in this respect. To continue to address these issues and implement solutions, the Xianyu technical team has chosen to focus on machine vision capabilities while using AI technologies as a supplement for building the UI2CODE system in its entirety, and continues to focus on AI technologies to make UI2CODE an ideal automated tool for code generation. 在本文介绍的五个关键组件中，有四个涉及机器视觉问题，并通过 AI 连接在一起。对将代码发布到在线环境中这件事提出了非常严格的要求，并且对 AI 的概率性质这方面提出了重大挑战。 为了继续解决这些问题并实施解决方案，闲鱼技术团队选择专注于机器视觉功能，同时使用 AI 技术作为整体构建 UI2CODE 系统的补充，并继续专注于 AI 技术，使 UI2CODE 成为自动化代码生成工具的一种理想选择。 (Original article by Chen Yongxin陈永新 ) 原文地址：https://medium.com/p/7e0a575c193]]></content>
      <categories>
        <category>Reading</category>
        <category>Medium</category>
      </categories>
  </entry>
</search>
